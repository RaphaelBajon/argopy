name: tests

on:
  push:
    branches:
      - master
  pull_request:
    branches-ignore:
      - 'dependabot*'

jobs:

  detect-ci-trigger:
    name: detect ci trigger
    runs-on: ubuntu-latest
    if: |
      github.repository == 'euroargodev/argopy'
      && (github.event_name == 'push' || github.event_name == 'pull_request')
    outputs:
      triggered: ${{ steps.detect-trigger.outputs.trigger-found }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: xarray-contrib/ci-trigger@v1.1
        id: detect-trigger
        with:
          keyword: "[skip-ci]"

  pinned:
    # CI tests for pinned environments, argopy must pass tests in a controlled environment

    needs: detect-ci-trigger
    runs-on: ${{ matrix.os }}
    if: needs.detect-ci-trigger.outputs.triggered == 'false'
    defaults:
      run:
        shell: bash -l {0}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      max-parallel: 12
      fail-fast: true
      matrix:
        python-version: [3.7, 3.8]
        os: [ubuntu-latest, macos-latest, windows-latest]
        experimental: [false]

    steps:
      - uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "CONDA_ENV_FILE=ci/requirements/py${{matrix.python-version}}-dev-full.yml" >> $GITHUB_ENV
          echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV

      - name: Cache conda
        uses: actions/cache@v3
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-py${{ matrix.python-version }}-${{ hashFiles('ci/requirements/**.yml') }}

      - name: Set up environment with py-${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          channel-priority: strict
          mamba-version: "*"
          activate-environment: argopy-tests
          python-version: ${{ matrix.python-version }}
          auto-update-conda: false
          use-only-tar-bz2: true

      - name: Install conda dependencies
        run: |
          mamba env update -f $CONDA_ENV_FILE

      - shell: bash -l {0}
        run: |
          conda info
          conda list

      - name: Lint with flake8
        shell: bash -l {0}
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        shell: bash -l {0}
        run: |
          pytest -rfs -v -s --durations=10 --cov=./ --cov-config=.coveragerc --cov-report xml:cov.xml --cov-report term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.0.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./cov.xml
          flags: unittests
          name: codecov-github
          fail_ci_if_error: true
          env_vars: RUNNER_OS,PYTHON_VERSION

  min:

    needs: detect-ci-trigger
    runs-on: ${{ matrix.os }}
    if: needs.detect-ci-trigger.outputs.triggered == 'false'
    defaults:
      run:
        shell: bash -l {0}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      max-parallel: 12
      fail-fast: true
      matrix:
        python-version: [3.7, 3.8]
        os: [ubuntu-latest, macos-latest, windows-latest]
        experimental: [false]

    steps:
      - uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "CONDA_ENV_FILE=ci/requirements/py${{matrix.python-version}}-min-full.yml" >> $GITHUB_ENV
          echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV

      - name: Set up environment with py-${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          channel-priority: strict
          mamba-version: "*"
          activate-environment: argopy-tests
          python-version: ${{ matrix.python-version }}
          auto-update-conda: false
          use-only-tar-bz2: true

      - name: Install conda dependencies
        run: |
          mamba env update -f $CONDA_ENV_FILE

      - shell: bash -l {0}
        run: |
          conda info
          conda list

      - name: Lint with flake8
        shell: bash -l {0}
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        shell: bash -l {0}
        run: |
          pytest -rfs -v -s --durations=10 --cov=./ --cov-config=.coveragerc --cov-report xml:cov.xml --cov-report term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.0.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./cov.xml
          flags: unittests
          name: codecov-github
          fail_ci_if_error: true
          env_vars: RUNNER_OS,PYTHON_VERSION

  free-core:

    needs: detect-ci-trigger
    runs-on: ${{ matrix.os }}
    if: needs.detect-ci-trigger.outputs.triggered == 'false'
    defaults:
      run:
        shell: bash -l {0}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      max-parallel: 12
      fail-fast: true
      matrix:
        python-version: [3.7, 3.8]
        os: [ubuntu-latest, macos-latest, windows-latest]
        experimental: [false]

    steps:
      - uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "CONDA_ENV_FILE=ci/requirements/py${{matrix.python-version}}-free-core.yml" >> $GITHUB_ENV
          echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV

      - name: Set up environment with py-${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          channel-priority: strict
          mamba-version: "*"
          activate-environment: argopy-tests
          python-version: ${{ matrix.python-version }}
          auto-update-conda: false
          use-only-tar-bz2: true

      - name: Install conda dependencies
        run: |
          mamba env update -f $CONDA_ENV_FILE

      - shell: bash -l {0}
        run: |
          conda info
          conda list

      - name: Lint with flake8
        shell: bash -l {0}
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        shell: bash -l {0}
        run: |
          pytest -rfs -v -s --durations=10 --cov=./ --cov-config=.coveragerc --cov-report xml:cov.xml --cov-report term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.0.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./cov.xml
          flags: unittests
          name: codecov-github
          fail_ci_if_error: true
          env_vars: RUNNER_OS,PYTHON_VERSION

  free:

    needs: free-core
    runs-on: ${{ matrix.os }}
    if: needs.detect-ci-trigger.outputs.triggered == 'false'
    defaults:
      run:
        shell: bash -l {0}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      max-parallel: 12
      fail-fast: true
      matrix:
        python-version: [3.7, 3.8]
        os: [ubuntu-latest, macos-latest, windows-latest]
        experimental: [false]
        include:
          - python-version: 3.10
            os: ubuntu-latest
            experimental: true

    steps:
      - uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "CONDA_ENV_FILE=ci/requirements/py${{matrix.python-version}}-free-full.yml" >> $GITHUB_ENV
          echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV

      - name: Set up environment with py-${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          channel-priority: strict
          mamba-version: "*"
          activate-environment: argopy-tests
          python-version: ${{ matrix.python-version }}
          auto-update-conda: false
          use-only-tar-bz2: true

      - name: Install conda dependencies
        run: |
          mamba env update -f $CONDA_ENV_FILE

      - shell: bash -l {0}
        run: |
          conda info
          conda list

      - name: Lint with flake8
        shell: bash -l {0}
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        shell: bash -l {0}
        run: |
          pytest -rfs -v -s --durations=10 --cov=./ --cov-config=.coveragerc --cov-report xml:cov.xml --cov-report term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.0.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./cov.xml
          flags: unittests
          name: codecov-github
          fail_ci_if_error: true
          env_vars: RUNNER_OS,PYTHON_VERSION
